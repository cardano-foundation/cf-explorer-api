name: Run Tests

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

env:
  PRIVATE_MVN_REGISTRY_TOKEN: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}
  PRIVATE_MVN_REGISTRY_URL: ${{ secrets.GITLAB_MAVEN_REGISTRY_URL }}
  PRIVATE_MVN_REGISTRY_USER: ${{ secrets.PRIVATE_MVN_REGISTRY_USER }}
  PRIVATE_MVN_REGISTRY_PASS: ${{ secrets.PRIVATE_MVN_REGISTRY_PASS }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Setup depends
        run: |
          pip install yq

      - name: Setup maven settings.xml
        run: | 
          envsubst < ./.m2/settings.default.xml.tpl > ./.m2/settings.xml

      - name: Build
        run: |
          mvn --batch-mode --update-snapshots clean package -DskipTests

      - name: Test
        run: |
          mvn --batch-mode --update-snapshots test

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          generate-summary: true
          badges-directory: build/reports/jacoco/test/html/badges

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Publish coverage report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          BRANCH: gh-pages
          folder: build/reports/jacoco/test/html
  end2end:
    needs: test
    runs-on: ubuntu-latest
    container:
      image: postman/newman
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install report library allure
        run: npm install -g newman-reporter-allure
      - name: Install allure
        run: npm install -g allure
      - name: Install report library htmlextra
        run: npm install -g newman-reporter-htmlextra
      - name: Test
        run: newman run src/test/Postman/Cardano-Explorer-API.postman_collection.json -e src/test/Postman/DevInt.postman_environment.json -r cli,htmlextra,allure --reporter-htmlextra-export=reporthtml/reporthtml.html
      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        #id: allure-report
        with:
          allure_results: allure-results
      - name: Archive html results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: html-report
          path: reporthtml
      - name: Archive allure results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: allure-report
          path: allure-report

  pages:
    needs: end2end
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Setup depends
        run: |
          pip install yq

      - name: Setup maven settings.xml
        run: |
          envsubst < ./.m2/settings.default.xml.tpl > ./.m2/settings.xml

      - name: Build
        run: |
          mvn --batch-mode --update-snapshots clean package -DskipTests

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Publish mutation test report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: always()
        with:
          BRANCH: gh-pages
          folder: allure-report
          target-folder: allure/

      - name: Publish mutation test report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: always()
        with:
          BRANCH: gh-pages
          folder: html-report
          target-folder: html-report/