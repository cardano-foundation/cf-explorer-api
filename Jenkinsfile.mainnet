def envFileDeploy
def composeFile

def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger',
]

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
                echo 'Build successfully!!!'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
                script {
                    envFileDeploy = '/tmp/env-dev.env'
                    composeFile = 'docker-compose.yml'
                }
                sh "docker-compose --env-file ${envFileDeploy} -f ${composeFile} up -d --build"
                sh "docker images -f 'dangling=true' -q --no-trunc | xargs --no-run-if-empty docker rmi"
                echo 'Deployment Done!!!'
            }
        }
    }
    post {
        always {
            script {
                Author_ID = sh(script: 'git show -s --pretty=%an', returnStdout: true).trim()
                Author_Name = sh(script: 'git show -s --pretty=%ae', returnStdout: true).trim()
            }
            slackSend channel: '#build-group-test',
                    color: COLOR_MAP[currentBuild.currentResult],
                    message: "*${currentBuild.currentResult}:* ${env.JOB_NAME} build ${env.BUILD_NUMBER} by commit author: ${Author_ID} \n More information at: ${env.BUILD_URL}"
        }
    }
}
