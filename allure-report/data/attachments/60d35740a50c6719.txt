var jsonData = pm.response.json();
var stt = 200
var res_time = 5000

//Compare static data
pm.test("Status code is 200", function () {
    pm.response.to.have.status(stt);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(res_time);
});

pm.test("Check currentPage value", function () {
    pm.expect(jsonData.currentPage).to.eql(0);
});

//Compare format data type
pm.test("Check data type of the response", () => {
    pm.expect(jsonData).to.be.an("object");
    pm.expect(jsonData.totalItems).to.be.a("number");
    pm.expect(jsonData.totalPages).to.be.a("number");
    pm.expect(jsonData.currentPage).to.be.a("number");
    pm.expect(jsonData.data).to.be.an("array");
    pm.expect(jsonData.data[0].scriptHash).to.be.a("string", "scriptHash");
    pm.expect(jsonData.data[0].scriptVersion).to.be.a("string", "scriptVersion");
    pm.expect(jsonData.data[0].txCount).to.be.a("number", "txCount")
    if (jsonData.data[0].scriptPurposeTypes) {
        pm.expect(jsonData.data[0].txPurposes).to.be.an("array", "txPurposes");
        pm.expect(jsonData.data[0].txPurposes).to.contain.oneOf(["SPEND", "MINT", "CERT", "REWARD"]);

    }
});

//Random value
pm.test("GetÂ random data", function () {
    var randomIndex = Math.floor(Math.random() * (jsonData.data.length - 1));
    pm.environment.set("contract_scriptHash", jsonData.data[randomIndex].scriptHash);
    pm.environment.set("contract_scriptVersion", jsonData.data[randomIndex].scriptVersion);
    // pm.environment.set("contract_associatedAddress", jsonData.data[randomIndex].associatedAddress);
});