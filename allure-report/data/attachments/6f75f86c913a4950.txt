// var stt = "200";
// stt = pm.variables.get("stt");
var jsonData = pm.response.json();

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check totalSlot value", function () {
    pm.expect(jsonData.totalSlot).to.eql(432000);
});

//Compare data type
pm.test("Check data type of no", () => {
  pm.expect(jsonData.no).to.be.a("number");
});

pm.test("Check data type of slot", () => {
  pm.expect(jsonData.slot).to.be.a("number");
});

pm.test("Check data type of totalSlot", () => {
  pm.expect(jsonData.totalSlot).to.be.a("number");
});

pm.test("Check data type of account", () => {
  pm.expect(jsonData.account).to.be.a("number");
});

pm.test("Check data type of startTime", () => {
        let moment = require ('moment');
  pm.expect(jsonData.startTime).to.include(moment(jsonData.startTime).format('YYYY/MM/DD HH:mm:ss'));
});

pm.test("Check data type of endTime", () => {
        let moment = require ('moment');
  pm.expect(jsonData.endTime).to.include(moment(jsonData.endTime).format('YYYY/MM/DD HH:mm:ss'));
});

pm.test("Check data type of circulatingSupply", () => {
  pm.expect(jsonData.circulatingSupply).to.be.a("number");
});

pm.test("Check data type of blkCount", () => {
  pm.expect(jsonData.blkCount).to.be.a("number");
});

//Get value
pm.test("Get data of Get current epoch api ",function (){
    pm.environment.set("epoch_no", jsonData.no);
    pm.environment.set("epoch_totalSlot", jsonData.totalSlot);
    pm.environment.set("epoch_account", jsonData.account);
    pm.environment.set("epoch_startTime", jsonData.startTime);
    pm.environment.set("epoch_endTime", jsonData.endTime);
    console.log(jsonData.no);
});

