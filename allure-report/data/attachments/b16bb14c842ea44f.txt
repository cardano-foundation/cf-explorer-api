var jsonData = pm.response.json();

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check currentPage value", function () {
    pm.expect(jsonData.currentPage).to.eql(0);
});

//Compare data type
pm.test("Check data type of hash", () => {
    let moment = require ('moment');

    pm.expect(jsonData.data[0].hash).to.be.a("string");
    pm.expect(jsonData.data[0].blockNo).to.be.a("number");
    pm.expect(jsonData.data[0].blockHash).to.be.a("string");
    pm.expect(jsonData.data[0].epochNo).to.be.a("number");
    pm.expect(jsonData.data[0].epochSlotNo).to.be.a("number");
    pm.expect(jsonData.data[0].slot).to.be.a("number");
    pm.expect(jsonData.data[0].time).to.include(moment(jsonData.data[0].time).format('YYYY/MM/DD HH:mm:ss'));
    pm.expect(jsonData.data[0].addressesInput).to.be.an("array");
    pm.expect(jsonData.data[0].addressesOutput).to.be.an("array");
    pm.expect(jsonData.data[0].fee).to.be.a("number");
    pm.expect(jsonData.data[0].totalOutput).to.be.a("number");
    if (jsonData.data[0].balance){
       pm.expect(typeof jsonData.data[0].balance).to.be.oneOf([ 'object', 'number']); 
    }
    pm.expect(jsonData.data[0].tokens).to.be.an("array");
    pm.expect(jsonData.totalItems).to.be.a("number");
    pm.expect(jsonData.totalPages).to.be.a("number");
});

//Scenario Compare api Get tx list of block with api Get a block detail
pm.test("Compare txCount at api get tx list of block with api get a block detail",function (){
    pm.expect(jsonData.totalItems).to.eql(pm.environment.get("block_txCount"));
});

pm.test("Compare value between tx list of block with", function () {
    var tx_blockNo = pm.environment.get("tx_blockNo");
    var tx_hash = pm.environment.get("tx_hash");
    var tx_blockHash = pm.environment.get("tx_blockHash");
    var tx_epochNo = pm.environment.get("tx_epochNo");
    var tx_time = pm.environment.get("tx_time");
    var tx_amount = pm.environment.get("tx_amount");
    var tx_fee = pm.environment.get("tx_fee");
    var tx_epochSlotNo = pm.environment.get("tx_epochSlotNo");

    let tb_result =jsonData.data.find(b => b.hash === tx_hash);

    //Main compare
    pm.expect(tb_result.blockNo).to.eql(tx_blockNo);
    pm.expect(tb_result.blockHash).to.eql(tx_blockHash);
    pm.expect(tb_result.epochNo).to.eql(tx_epochNo);
    pm.expect(tb_result.epochSlotNo).to.eql(tx_epochSlotNo);
    pm.expect(tb_result.time).to.contain(tx_time);
    pm.expect(tb_result.fee).to.eql(tx_fee);
    pm.expect(tb_result.totalOutput).to.eql(tx_amount);
});

// Check default size 
if (jsonData.totalItems > 0){
    pm.test("Check Size default", function(){
        pm.expect(jsonData.data.length).to.be.within(1, 100);
    });
};



