var jsonData = pm.response.json();
var stt = 200
var res_time = 5000

//Compare static data
pm.test("Status code is 200", function () {
    pm.response.to.have.status(stt);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(res_time);
});

pm.test("Check currentPage value", function () {
    pm.expect(jsonData.currentPage).to.eql(0);
});

//Compare format data type
pm.test("Check data type of the response", () => {
    let moment = require ('moment');
    pm.expect(jsonData).to.be.an("object");
    pm.expect(jsonData.totalItems).to.be.a("number");
    pm.expect(jsonData.totalPages).to.be.a("number");
    pm.expect(jsonData.currentPage).to.be.a("number");
    pm.expect(jsonData.data).to.be.an("array");
    pm.expect(jsonData.data[0].txHash).to.be.a("string");
    pm.expect(jsonData.data[0].value).to.be.a("number");
    pm.expect(jsonData.data[0].fee).to.be.a("number");
    pm.expect(jsonData.data[0].time).to.include(moment(jsonData.data[0].time).format('YYYY/MM/DD HH:mm:ss'));
});

//Scenario compare get get Detail Withdrawal with get Withdrawals + Scenario compare get Withdrawal with Get withdrawal transaction of stake key
pm.test("Get Randome value of get Withdrawals api",function(){
    //Randome value
    var randomIndex = Math.floor(Math.random() * (jsonData.data.length-1));
    console.log(randomIndex);
    pm.environment.set("getWithdrawals_data_txHash", jsonData.data[randomIndex].txHash);
    pm.environment.set("getWithdrawals_data_value", jsonData.data[randomIndex].value);
    pm.environment.set("getWithdrawals_data_fee", jsonData.data[randomIndex].fee);
    pm.environment.set("getWithdrawals_data_time", jsonData.data[randomIndex].time);
});

//scenario compare value of get Withdrawals api and Get stake withdrawals by report id api
pm.test("Compare value of get Withdrawals api and Get stake  withdrawals by report id api ",function (){
    //all variable get from API api/v1/staking-lifecycle/report/stake-key/:reportId/withdrawals(Get stake withdrawals by report id)
    var txHash = pm.environment.get("stakingwithdrawals_data_txHash");
    let result = jsonData.data.find(a => a.txHash === txHash);

    if (result?.txHash === txHash){
        pm.expect(result.txHash).to.include(pm.environment.get("stakingwithdrawals_data_txHash"));
        pm.expect(result.value).to.eql(pm.environment.get("stakingwithdrawals_data_value"));
        pm.expect(result.fee).to.eql(pm.environment.get("stakingwithdrawals_data_fee"));
        pm.expect(result.time).to.contain(pm.environment.get("stakingwithdrawals_data_time"));
    };
});

// Check default size 
if (jsonData.totalItems > 0){
    pm.test("Check Size default", function(){
        pm.expect(jsonData.data.length).to.be.within(1, 100);
    });
};
