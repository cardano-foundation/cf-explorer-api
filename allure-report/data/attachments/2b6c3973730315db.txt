// var stt = "200";
// stt = pm.variables.get("stt");
var jsonData = pm.response.json();

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check maxEpochSlot value", function () {
    pm.expect(jsonData.tx.maxEpochSlot).to.eql(432000);
});

//Compare data type
pm.test("Check data type of the response", () => {
    let moment = require ('moment');
    pm.expect(jsonData.tx.hash).to.be.a("string");
    pm.expect(jsonData.tx.time).to.include(moment(jsonData.tx.time).format('YYYY/MM/DD HH:mm:ss'));
    pm.expect(jsonData.tx.blockNo).to.be.a("number");
    pm.expect(jsonData.tx.blockHash).to.be.a("string");
    pm.expect(jsonData.tx.epochSlot).to.be.a("number");
    pm.expect(jsonData.tx.maxEpochSlot).to.be.a("number");
    pm.expect(jsonData.tx.epochNo).to.be.a("number");
    pm.expect(jsonData.tx.status).to.be.a("string");
    pm.expect(jsonData.tx.confirmation).to.be.a("number");
    pm.expect(jsonData.tx.fee).to.be.a("number");
    pm.expect(jsonData.tx.totalOutput).to.be.a("number");
});


// Scenario Compare api: Filter transaction with api: Get transaction detail by hash
pm.test("Check blockNo value", function () {
    pm.expect(jsonData.tx.blockNo).to.eql(pm.environment.get("tx_blockNo"));
});

pm.test("Check blockHash value", function () {
    pm.expect(jsonData.tx.blockHash).to.include(pm.environment.get("tx_blockHash"));
});

pm.test("Check epochNo value", function () {
    pm.expect(jsonData.tx.epochNo).to.eql(pm.environment.get("tx_epochNo"));
});

pm.test("Check epochSlot value", function () {
    pm.expect(jsonData.tx.epochSlot).to.eql(pm.environment.get("tx_epochSlotNo"));
});

pm.test("Check fee value", function () {
    pm.expect(jsonData.tx.fee).to.eql(pm.environment.get("tx_fee"));
});

pm.test("Check totalOutput value", function () {
    pm.expect((jsonData.tx.totalOutput/10**6).toFixed(2)).to.eql((pm.environment.get("tx_amount")/10**6).toFixed(2));
});


