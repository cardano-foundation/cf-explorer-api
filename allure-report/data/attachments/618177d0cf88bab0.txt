const jsonData = pm.response.json();

//Compare static value
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check poolId value", function () {
    pm.expect(jsonData.poolId).to.include("0f292fcaa02b8b2f9b3c8f9fd8e0bb21abedb692a6d5058df3ef2735");
});

pm.test("Check poolName value", function () {
    pm.expect(jsonData.poolName).to.include("StakeNuts");
});

pm.test("Check poolView value", function () {
    pm.expect(jsonData.poolView).to.include("pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy");
});

//Compare data type
pm.test("Check data type of the response", () => {
    let moment = require ('moment');
    pm.expect(jsonData).to.be.an("object");
    pm.expect(jsonData.poolId).to.be.a("string");
    pm.expect(jsonData.poolName).to.be.a("string");
    pm.expect(jsonData.poolView).to.be.a("string");
    pm.expect(jsonData.poolSize).to.be.a("number");
    pm.expect(jsonData.rewardAvailable).to.be.a("number");
    pm.expect(jsonData.status).to.be.a("string");
    pm.expect(jsonData.epochNo).to.be.a("number");
    pm.expect(jsonData.stakeKeys).to.be.an("array");
    pm.expect(jsonData.rewardAccounts).to.be.an("array");
});

