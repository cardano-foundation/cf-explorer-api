var jsonData = pm.response.json();

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check currentPage value", function () {
    pm.expect(jsonData.currentPage).to.eql(0);
});

//Compare data type
pm.test("Check data type of txId", () => {
    pm.expect(jsonData.data[0].txId).to.be.a("number");
});

pm.test("Check data type of txHash", () => {
    pm.expect(jsonData.data[0].txHash).to.be.a("string");
});

pm.test("Check data type of txTime", () => {
    let moment = require('moment');
    pm.expect(jsonData.data[0].txTime).to.include(moment(jsonData.data[0].txTime).format('YYYY/MM/DD HH:mm:ss'));
});

pm.test("Check data type of epoch", () => {
    pm.expect(jsonData.data[0].epoch).to.be.a("number");
});

pm.test("Check data type of block", () => {
    pm.expect(jsonData.data[0].block).to.be.a("number");
});

pm.test("Check data type of slotNo", () => {
    pm.expect(jsonData.data[0].slotNo).to.be.a("number");
});

pm.test("Check data type of poolName", () => {
    if (jsonData.data.poolName) {
        pm.expect(typeof jsonData.data[0].poolName).to.be.oneOf(['object', 'string'],"pool name");
    }
});

pm.test("Check data type of pledge", () => {
    pm.expect(jsonData.data[0].pledge).to.be.a("number");
});

pm.test("Check data type of cost", () => {
    pm.expect(jsonData.data[0].cost).to.be.a("number");
});

pm.test("Check data type of margin", () => {
    pm.expect(jsonData.data[0].margin).to.be.a("number");
});

pm.test("Check data type of poolId", () => {
    pm.expect(jsonData.data[0].poolId).to.be.a("number");
});

pm.test("Check data type of poolView", () => {
    pm.expect(jsonData.data[0].poolView).to.be.a("string");
});


pm.test("Check data type of stakeKey", () => {
    pm.expect(jsonData.data[0].stakeKey).to.be.a("array");
});

pm.test("Check data type of totalItems", () => {
    pm.expect(jsonData.totalItems).to.be.a("number");
});

pm.test("Check data type of totalPages", () => {
    pm.expect(jsonData.totalPages).to.be.a("number");
});

// Check default size 
if (jsonData.totalItems > 0) {
    pm.test("Check Size default", function () {
        pm.expect(jsonData.data.length).to.be.within(1, 100);
    });
};