var jsonData = pm.response.json();
var stt = 200
var res_time = 5000
var stake_address = "stake1u9tqcg5qatru0k7h45vtldj7j3c3zhgr6ndglgwu866qglqkzv6c2"
var pool_id = "pool1w7c2j0px43jmudhf48ezp7dy8j7904c9l3wc7809lhh2z026hch"

//Compare static data
pm.test("Status code is 200", function () {
    pm.response.to.have.status(stt);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(res_time);
});

pm.test("Compare Stakeaddress", function () {
    pm.expect(jsonData.stakeAddress).to.include(stake_address);
});

pm.test("Compare PoolId", function () {
    pm.expect(jsonData.pool.poolId).to.include(pool_id);
});

//Compare format dynamic data
pm.test("Check data type of the response", () => {
    pm.expect(jsonData.status).to.be.a("string");
    pm.expect(jsonData.stakeAddress).to.be.a("string");
    pm.expect(jsonData.totalStake).to.be.a("number");
    pm.expect(jsonData.rewardAvailable).to.be.a("number");
    pm.expect(jsonData.rewardWithdrawn).to.be.a("number");
    pm.expect(jsonData.pool).to.be.an("object");
    pm.expect(typeof jsonData.pool.tickerName).to.be.oneOf([ 'object', 'string']);
    pm.expect(typeof jsonData.pool.poolName).to.be.oneOf([ 'object', 'string']);
    pm.expect(jsonData.pool.poolId).to.be.a("string");
    pm.expect(typeof jsonData.pool.logoUrl).to.be.oneOf([ 'object', 'string']);
    pm.expect(typeof jsonData.pool.iconUrl).to.be.oneOf([ 'object', 'string']);   
    pm.expect(jsonData.rewardPools).to.be.an("array");
});

