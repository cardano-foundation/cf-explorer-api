const jsonData = pm.response.json();

//Compare static value
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(5000);
});

pm.test("Check currentPage value", function () {
    pm.expect(jsonData.currentPage).to.eql(0);
});

if (jsonData.data.length > 0) {
    //Compare data type
    pm.test("Check data type of the response", () => {
        let moment = require('moment');
        pm.expect(jsonData).to.be.an("object");
        pm.expect(jsonData.totalItems).to.be.a("number");
        pm.expect(jsonData.totalPages).to.be.a("number");
        pm.expect(jsonData.currentPage).to.be.a("number");
        if (jsonData.data.length>0) {
            pm.expect(jsonData.data[0]).to.be.a("string");
        }

    });

    //Scenario compare api Get: pool Owner with api Get: Get a stake detail by stake key (stakes)
    pm.test("Compare api Get: pool Owner with api Get: Get a stake detail by stake key", function () {
        pm.expect(jsonData.data).to.include(pm.environment.get("stake_pool_poolId"));
    });
}

// Check default size 
if (jsonData.totalItems > 0) {
    pm.test("Check Size default", function () {
        pm.expect(jsonData.data.length).to.be.within(1, 100);
    });
};