var jsonData = pm.response.json();
var stt = 200
var res_time = 5000

//Compare static data
pm.test("Status code is 200", function () {
    pm.response.to.have.status(stt);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(res_time);
});

//Compare format data type
pm.test("Check data type of the response", () => {
    let moment = require ('moment');
    pm.expect(jsonData.activeSlotsCoeff).to.be.a("number");
    pm.expect(typeof jsonData.genDelegs).to.be.oneOf([ 'object', 'array']);
    pm.expect(jsonData.updateQuorum).to.be.a("number");
    pm.expect(jsonData.networkId).to.be.a("string");
    pm.expect(typeof jsonData.initialFunds).to.be.oneOf([ 'object', 'array']);
    pm.expect(jsonData.maxLovelaceSupply).to.be.a("number");
    pm.expect(jsonData.networkMagic).to.be.a("number");
    pm.expect(jsonData.epochLength).to.be.an("number");
    pm.expect(jsonData.timestamp).to.include(moment(jsonData.timestamp).format('YYYY-MM-DD HH:mm:ss'));
    pm.expect(jsonData.slotsPerKESPeriod).to.be.a("number");
    pm.expect(jsonData.slotLength).to.be.a("number");
    pm.expect(jsonData.maxKESEvolutions).to.be.a("number");
    pm.expect(jsonData.securityParam).to.be.a("number");
});



