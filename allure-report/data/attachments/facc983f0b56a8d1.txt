var jsonData = pm.response.json();
var stt = 200
var res_time = 5000

//Compare static data
pm.test("Status code is 200", function () {
    pm.response.to.have.status(stt);
});

pm.test("Response time is less than 5000ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(res_time);
});

//Check type of data
pm.test("Check respond for type of data", function () {
    let moment = require('moment');
    pm.expect(jsonData.scriptHash).to.be.a("string");
    pm.expect(jsonData.numberOfTokens).to.be.a("number");
    pm.expect(jsonData.numberOfAssetHolders).to.be.a("number");
    if (jsonData.conditionType) {
        pm.expect(typeof jsonData.conditionType).to.be.oneOf(["object", "string"]);
    }
    if (jsonData.require !== undefined) {
        if (typeof jsonData.required === 'number') {
            pm.expect(jsonData.required).to.be.a('number')
        } else {
            pm.expect(jsonData.required).to.eql(null);
        }
    }
    // else {
    //     pm.expect(jsonData.required).to.eql(undefined);

    // }

    pm.expect(jsonData.keyHashes).to.be.an("array");
    if (jsonData.keyHashes.length > 0) {
        pm.expect(jsonData.keyHashes[0]).to.be.a("string");
    }

    if (jsonData.after !== undefined) {
        if (jsonData.after) {
            pm.expect(jsonData.after).to.include(moment(jsonData.after).format('YYYY/MM/DD HH:mm:ss'));
        } else {
            pm.expect(jsonData.after).to.eql(null);
        }
    }

    if (jsonData.before !== undefined) {
        if (jsonData.before) {
            pm.expect(jsonData.before).to.include(moment(jsonData.before).format('YYYY/MM/DD HH:mm:ss'));
        } else {
            pm.expect(jsonData.before).to.eql(null);
        }
    }

    pm.expect(jsonData.associatedAddress).to.be.an("array");
    if (jsonData.associatedAddress.length > 0) {
        pm.expect(jsonData.associatedAddress[0]).to.be.a("string");
    }

    if (jsonData.script != undefined) {
        {
            if (jsonData.script === null) {
                pm.expect(jsonData.script).to.eql(null);
            } else {
                pm.expect(jsonData.script).to.be.a("string");
            }
        }
    }

    if (jsonData.isOneTimeMint != undefined) {
        if (jsonData.isOneTimeMint === null) {
            pm.expect(jsonData.isOneTimeMint).to.eql(null);
        } else {
            pm.expect(jsonData.isOneTimeMint).to.be.a("boolean", "jsonData.isOneTimeMint");
        }

    }

    if (jsonData.verifiedContract != undefined) {
        if (jsonData.verifiedContract === null) {
            pm.expect(jsonData.verifiedContract).to.eql(null);
        } else {
            pm.expect(jsonData.verifiedContract).to.be.a("boolean");
        }
    }
})


//Scenario: compare data api get Native Scripts and get Native Script Detail
//all variable get from API /api/v1/scripts/native-scripts (get Native Scripts)
pm.test("Check Others value", function () {
    pm.expect(jsonData.scriptHash).to.include(pm.environment.get("native_scriptHash"));
    pm.expect(jsonData.numberOfTokens).to.equal(pm.environment.get("native_numberOfTokens"));
    pm.expect(jsonData.numberOfAssetHolders).to.equal(pm.environment.get("native_numberOfAssetHolders"));
});

//Compare data with {{baseUrl}}/api/v1/scripts/native-scripts/:scriptHash/verify
// pm.test("response should be okay to process", function () {
//     if (jsonData.script) {
//         pm.expect(JSON.parse(jsonData.script).type).to.eql(pm.environment.get("type_native_script"));
//         //keyHashes check
//         if (jsonData.keyHashes.length > 0) {
//             if (pm.environment.get("keyHash_native_script")) {
//                 pm.expect(jsonData.keyHashes).to.be.include(pm.environment.get("keyHash_native_script"))
//             }
//             if (pm.environment.get("scripts_native_script")) {
//                 pm.expect(jsonData.keyHashes[0]).to.eql(pm.environment.get("keyHash_native_script"));
//             }
//         }
//     }
// })


